{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContainerWrap","Container","children","Wrapper","styled","div","Title","h2","Section","title","Label","Input","Button","INITIAL_STATE","name","number","ContactForm","state","onInputChange","e","target","value","setState","onFormSubmit","preventDefault","props","onSubmit","id","uuidv4","formReset","this","type","pattern","required","onChange","autoFocus","placeholder","Component","List","ul","ListItem","li","button","ContactList","contacts","onDeleteContact","map","contact","onClick","FilterInput","Filter","App","filter","addContact","newContact","find","alert","changeFilter","currentTarget","onInputSearch","searchName","toLowerCase","includes","deleteContact","contactId","prevState","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f902e463.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const ContainerWrap = styled.div`\nwidth: 100%;\nheight: 100vh;\npadding: 30px 15px;\n\nmargin: 0 auto;\n\nbackground-color: #bcbabe;\n`","import {ContainerWrap} from './Container.styled'\n\nfunction Container({ children }) {\n  return <ContainerWrap>{children}</ContainerWrap>;\n}\n\nexport default Container;","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 500px;\n  display: block;\n  padding: 15px 30px;\n  margin: 0 auto;\n\n  background-color: #a1d6e2 ;\n  color: #444c5c;\n  border-radius: 4px;\n  box-shadow: 5px 6px 8px 0px rgba(120, 165, 163, 0.2);\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n\n \n`;\n\nexport const Title = styled.h2`\n  margin:0;\n  margin-bottom: 10px;\n  font-size: 32px;\n  font-weight: 700;\n\n  text-align: center;\n  \n`;\n","import PropTypes from 'prop-types';\n\nimport {Wrapper, Title} from './Section.styled.js';\n\nfunction Section({ title, children }) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title> {children}\n    </Wrapper>\n  );\n}\n\n\n\nSection.propTypes={\n  title: PropTypes.string,\n}\n\nexport default Section;\n","import styled from \"@emotion/styled/macro\";\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-size: 18px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 5px;\n  width: 350px;\n  height: 35px;\n\n  border: none;\n  border-radius: 4px;\n  padding-left: 15px;\n  color: #444c5c;\n  \n  &:placeholder-shown{\n    font-size: 14px;\n  }\n\n`;\n\nexport const Button = styled.button`\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px 16px;\n  color: #1995ad;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  cursor: pointer;\n\n  margin-top: 10px;\n  transition: all 300ms linear;\n\n\n  &:hover,\n  &:focus{\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03)\n  } \n`\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { Label, Input, Button } from \"./ContactForm.styled\";\nimport Section from \"../Section/Section\";\n\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  onInputChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n\n    const {name, number} = this.state;\n    this.props.onSubmit({id: uuidv4(), name, number });\n    this.formReset();\n  };\n\n  formReset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Section title={\"Phonebook\"}>\n        <form onSubmit={this.onFormSubmit}>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.onInputChange}\n              value={name} // в value значение инпута\n              autoFocus\n            />\n          </Label>\n          <Label>\n            Phone\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.onInputChange}\n              value={number}\n              placeholder='8(***) *** ****'\n            />\n          </Label>\n          <Button>Add Contact</Button>\n        </form>\n      </Section>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\n\nexport const List = styled.ul`\npadding: 0;\nlist-style: none;\n/* text-align: center; */\n`\n\nexport const ListItem = styled.li`\nwidth: 350px;\ndisplay: inline-flex;\nalign-items: center;\n\n&:not(:last-child){\n  margin-bottom: 10px;\n}\n`\n\nexport const Button = styled.button`\n\nbackground-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 4px 8px;\n  color: #1995ad;\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 20px;\n  text-transform: capitalize;\n\n  cursor: pointer;\n\n  transition: all 300ms linear;\n  margin-left: auto;\n\n  &:hover,\n  &:focus{\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03)\n  } \n`","import PropTypes from 'prop-types';\nimport {List, ListItem, Button} from './ContactList.styled';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <List>\n      {contacts.map((contact) => {\n        return (\n          <ListItem key={contact.id}>\n            {contact.name}:<span> {contact.number}</span>\n            <Button type='button' onClick={()=>onDeleteContact(contact.id)}>Delete</Button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  onDeleteContact: PropTypes.func,\n}\n\nexport default ContactList;\n","import styled from \"@emotion/styled/macro\";\n\nexport const FilterInput=styled.input`\n`\n\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-size:18px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  & input {\n\n  margin-top: 5px;\n  width: 350px;\n  height: 35px;\n\n  border: none;\n  border-radius: 4px;\n  \n  }\n`;","import PropTypes from 'prop-types';\nimport { FilterInput, Label } from \"./Filter.styled\";\n\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div>\n      <Label>Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        title=\"Введите запрос для поиска\"\n        required\n        onChange={onChange}\n        value={value}\n      /></Label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\n\nimport Container from \"./components/Container/Container\";\nimport Section from \"./components/Section/Section\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (newContact) => {\n    this.state.contacts.find((contact) => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts.`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  onInputSearch = () => {\n    const { filter, contacts } = this.state;\n    const searchName = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(searchName)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => {\n        return contact.id !== contactId;\n      }),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.onInputSearch();\n    return (\n      <Container>\n        <ContactForm onSubmit={this.addContact}></ContactForm>\n        <Section title={\"Contacts\"}>\n          <Filter onChange={this.changeFilter} value={filter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          ></ContactList>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}