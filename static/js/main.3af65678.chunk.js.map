{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/FormikContactForm/FormikContactForm.styled.js","components/FormikContactForm/FormikContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContainerWrap","Container","children","Wrapper","styled","div","Title","h2","Section","title","CustomForm","Form","Label","Input","Field","Button","ErrorMsg","validationSchema","Yup","name","required","number","phone","FormikContactForm","onSubmit","initialValues","values","setSubmitting","resetForm","id","uuidv4","touched","autoComplete","htmlFor","size","type","placeholder","component","List","ul","ListItem","li","button","ContactList","contacts","onDeleteContact","map","contact","onClick","FilterInput","Filter","value","onChange","App","state","filter","addContact","newContact","find","alert","setState","changeFilter","e","currentTarget","onInputSearch","searchName","toLowerCase","includes","deleteContact","contactId","prevState","this","visibleContacts","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAEO,IAAMA,EAAa,mJ,OCIXC,I,IAAAA,EAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,cAACF,EAAD,UAAgBE,K,gBCDZC,EAAUC,IAAOC,IAAV,sSAgBPC,EAAQF,IAAOG,GAAV,oICAHC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOP,EAAY,EAAZA,SACxB,OACE,eAACC,EAAD,WACE,cAACG,EAAD,UAAQG,IADV,IAC0BP,M,0CCJvB,I,MAAMQ,EAAa,YAAOC,IAAP,qBAAH,IAEVC,EAAK,yKAaLC,EAAQ,YAAOC,IAAP,qBAAH,6SAwBLC,EAAM,yXAyBNC,EAAQ,iHCpDfC,EAAmBC,SAAW,CAClCC,KAAMD,WAAaE,SAAS,6BAC5BC,OAAQH,WACLI,MAAM,MAAM,EAAM,qCAClBF,aAuCUG,EApCW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACxB,8BACE,cAAC,IAAD,CACEC,cAAe,CAAEN,KAAM,GAAIE,OAAQ,IACnCJ,iBAAkBA,EAClBO,SAAU,SAACE,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC1BT,EAAiBO,EAAjBP,KAAME,EAAWK,EAAXL,OACdG,EAAS,CAAEK,GAAIC,cAAUX,OAAME,WAC/BO,IACAD,GAAc,IAPlB,SAUG,gBAAGI,EAAH,EAAGA,QAAH,OACC,eAACrB,EAAD,CAAYsB,aAAa,MAAzB,UACE,eAACpB,EAAD,CAAOqB,QAAQ,YAAf,UACE,cAAC,IAAD,CAAWC,KAAK,OADlB,OAGE,cAACrB,EAAD,CAAOsB,KAAK,OAAOhB,KAAK,OAAOiB,YAAY,SAC3C,cAAC,IAAD,CAAcjB,KAAK,OAAOkB,UAAWrB,OAEvC,eAACJ,EAAD,CAAOqB,QAAQ,YAAf,UACE,cAAC,IAAD,CAAYC,KAAK,OADnB,SAGE,cAACrB,EAAD,CAAOsB,KAAK,MAAMhB,KAAK,SAASiB,YAAY,qBAC3CL,EAAQV,QACP,cAAC,IAAD,CAAcF,KAAK,SAASkB,UAAWrB,OAI3C,cAACD,EAAD,CAAQoB,KAAK,SAAb,kCCjDGG,EAAOlC,IAAOmC,GAAV,6FAMJC,EAAWpC,IAAOqC,GAAV,uJAUR1B,EAASX,IAAOsC,OAAV,0bCOJC,MAtBf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC/B,OACE,cAACP,EAAD,UACGM,EAASE,KAAI,SAACC,GACb,OACE,eAACP,EAAD,WACGO,EAAQ5B,KADX,IACiB,qCAAQ4B,EAAQ1B,UAC/B,cAAC,EAAD,CAAQc,KAAK,SAASa,QAAS,kBAAMH,EAAgBE,EAAQlB,KAA7D,sBAFakB,EAAQlB,UCN1B,IAAMoB,EAAW,8KASXrC,EAAK,4OCcHsC,MArBf,YAAsC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvB,OACE,8BACE,eAAC,EAAD,mCACA,cAACH,EAAD,CACEd,KAAK,OACLhB,KAAK,SACLV,MAAM,0IACNW,UAAQ,EACRgC,SAAUA,EACVD,MAAOA,UCwDAE,E,4MA5DbC,MAAQ,CACNV,SAAU,CACR,CAAEf,GAAI,OAAQV,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEQ,GAAI,OAAQV,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEQ,GAAI,OAAQV,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEQ,GAAI,OAAQV,KAAM,iBAAkBE,OAAQ,cAEhDkC,OAAQ,I,EAGVC,WAAa,SAACC,GACZ,EAAKH,MAAMV,SAASc,MAAK,SAACX,GAAD,OAAaA,EAAQ5B,OAASsC,EAAWtC,QAC9DwC,MAAM,GAAD,OAAIF,EAAWtC,KAAf,6BACL,EAAKyC,UAAS,gBAAGhB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEa,GAAH,mBAAkBb,S,EAIlCiB,aAAe,SAACC,GACd,EAAKF,SAAS,CAAEL,OAAQO,EAAEC,cAAcZ,S,EAG1Ca,cAAgB,WACd,MAA6B,EAAKV,MAA1BC,EAAR,EAAQA,OAAQX,EAAhB,EAAgBA,SACVqB,EAAaV,EAAOW,cAE1B,OAAOtB,EAASW,QAAO,SAACR,GAAD,OACrBA,EAAQ5B,KAAK+C,cAAcC,SAASF,O,EAIxCG,cAAgB,SAACC,GACf,EAAKT,UAAS,SAACU,GAAD,MAAgB,CAC5B1B,SAAU0B,EAAU1B,SAASW,QAAO,SAACR,GACnC,OAAOA,EAAQlB,KAAOwC,U,4CAK5B,WACE,IAAQd,EAAWgB,KAAKjB,MAAhBC,OACFiB,EAAkBD,KAAKP,gBAC7B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASvD,MAAO,YAAhB,SACE,cAAC,EAAD,CAAmBe,SAAU+C,KAAKf,eAGpC,eAAC,EAAD,CAAS/C,MAAO,WAAhB,UACE,cAAC,EAAD,CAAQ2C,SAAUmB,KAAKV,aAAcV,MAAOI,IAC5C,cAAC,EAAD,CACEX,SAAU4B,EACV3B,gBAAiB0B,KAAKH,0B,GArDhBK,aCGHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3af65678.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const ContainerWrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 30px 15px;\n\n  margin: 0 auto;\n\n  background-color: #bcbabe;\n`;\n","import {ContainerWrap} from './Container.styled'\n\nfunction Container({ children }) {\n  return <ContainerWrap>{children}</ContainerWrap>;\n}\n\nexport default Container;","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 500px;\n  display: block;\n  padding: 15px 30px;\n  margin: 0 auto;\n\n  background-color: #a1d6e2;\n  color: #444c5c;\n  border-radius: 4px;\n  box-shadow: 5px 6px 8px 0px rgba(120, 165, 163, 0.2);\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  margin-bottom: 10px;\n  font-size: 32px;\n  font-weight: 700;\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport {Wrapper, Title} from './Section.styled.js';\n\nfunction Section({ title, children }) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title> {children}\n    </Wrapper>\n  );\n}\n\n\n\nSection.propTypes={\n  title: PropTypes.string,\n}\n\nexport default Section;\n","import styled from \"@emotion/styled/macro\";\nimport { Form, Field } from \"formik\";\n\nexport const CustomForm = styled(Form)``;\n\nexport const Label = styled.label`\n  display: inline-block;\n  align-items: baseline;\n\n  font-size: 20px;\n\n  margin-bottom: 15px;\n\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  width: 350px;\n  height: 35px;\n\n  border: none;\n  border-radius: 4px;\n  padding-left: 15px;\n  color: #444c5c;\n\n  &:placeholder-shown {\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #444c5c;\n    box-shadow: 3px 4px 5px 0px rgb(120 165 163 / 20%);\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px 16px;\n  color: #1995ad;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  cursor: pointer;\n\n  margin-top: 10px;\n  transition: all 300ms linear;\n\n  &:hover,\n  &:focus {\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03);\n  }\n`;\n\nexport const ErrorMsg = styled.div`\n  font-size: 14px;\n  color: #ff4d4d;\n  margin-bottom: 10px;\n`;\n","import React from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"yup-phone\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FaUserAlt, FaPhoneAlt } from \"react-icons/fa\";\n\nimport {\n  CustomForm,\n  Label,\n  Input,\n  ErrorMsg,\n  Button,\n} from \"./FormikContactForm.styled\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Please enter contact name\"),\n  number: Yup.string()\n    .phone(\"UA\", true, \"Please enter a valid phone number\")\n    .required(),\n});\n\nconst FormikContactForm = ({ onSubmit }) => (\n  <div>\n    <Formik\n      initialValues={{ name: \"\", number: \"\" }}\n      validationSchema={validationSchema}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        const { name, number } = values;\n        onSubmit({ id: uuidv4(), name, number });\n        resetForm();\n        setSubmitting(false);\n      }}\n    >\n      {({ touched }) => (\n        <CustomForm autoComplete=\"off\">\n          <Label htmlFor=\"firstName\">\n            <FaUserAlt size=\"16\" />\n            Name\n            <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n            <ErrorMessage name=\"name\" component={ErrorMsg} />\n          </Label>\n          <Label htmlFor=\"firstName\">\n            <FaPhoneAlt size=\"16\" />\n            Number\n            <Input type=\"tel\" name=\"number\" placeholder=\"38(***) *** ****\" />\n            {touched.number && (\n              <ErrorMessage name=\"number\" component={ErrorMsg}></ErrorMessage>\n            )}\n          </Label>\n\n          <Button type=\"submit\">Add Contact</Button>\n        </CustomForm>\n      )}\n    </Formik>\n  </div>\n);\n\nexport default FormikContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  /* text-align: center; */\n`;\n\nexport const ListItem = styled.li`\n  width: 350px;\n  display: inline-flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 4px 8px;\n  color: #1995ad;\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 20px;\n  text-transform: capitalize;\n\n  cursor: pointer;\n\n  transition: all 300ms linear;\n  margin-left: auto;\n\n  &:hover,\n  &:focus {\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03);\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { List, ListItem, Button } from \"./ContactList.styled\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <List>\n      {contacts.map((contact) => {\n        return (\n          <ListItem key={contact.id}>\n            {contact.name}:<span> {contact.number}</span>\n            <Button type=\"button\" onClick={() => onDeleteContact(contact.id)}>\n              Delete\n            </Button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled/macro\";\n\nexport const FilterInput = styled.input`\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #444c5c;\n    box-shadow: 3px 4px 5px 0px rgb(120 165 163 / 20%);\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-size: 18px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  & input {\n    margin-top: 5px;\n    width: 350px;\n    height: 35px;\n\n    border: none;\n    border-radius: 4px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FilterInput, Label } from \"./Filter.styled\";\n\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div>\n      <Label>Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        title=\"Введите запрос для поиска\"\n        required\n        onChange={onChange}\n        value={value}\n      /></Label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\n\nimport Container from \"./components/Container/Container\";\nimport Section from \"./components/Section/Section\";\n//import ContactForm from \"./components/ContactForm/ContactForm\";\nimport FormikContactForm from \"../src/components/FormikContactForm/FormikContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (newContact) => {\n    this.state.contacts.find((contact) => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts.`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  onInputSearch = () => {\n    const { filter, contacts } = this.state;\n    const searchName = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(searchName)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => {\n        return contact.id !== contactId;\n      }),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.onInputSearch();\n    return (\n      <Container>\n        <Section title={\"Phonebook\"}>\n          <FormikContactForm onSubmit={this.addContact} />\n        </Section>\n        {/* <ContactForm onSubmit={this.addContact}></ContactForm> */}\n        <Section title={\"Contacts\"}>\n          <Filter onChange={this.changeFilter} value={filter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          ></ContactList>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}